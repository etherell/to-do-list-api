---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/tasks/{task_id}/comments":
    post:
      summary: Creates comment
      tags:
      - Coments
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: task_id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Comment is created
          content:
            application/json:
              example:
                data:
                  id: 647020fd-3f6f-434b-aeaf-85c325d4f8e0
                  type: comment
                  attributes:
                    text: Beatae corrupti repudiandae omnis cum.
                    image_url: 
        '401':
          description: Unauthorized
        '404':
          description: Task not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  text:
                  - Text is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - comment
              properties:
                comment:
                  type: object
                  required:
                  - text
                  properties:
                    description:
                      type: string
                      example: Odio modi incidunt sit quo excepturi distinctio doloremque
                        laboriosam.
  "/api/v1/projects":
    post:
      summary: Creates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              example:
                data:
                  id: 3e351b45-14e1-4e16-a739-6f722d7f5539
                  type: project
                  attributes:
                    title: Soluta placeat debitis adipisci aut earum provident tenetur.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Quam itaque pariatur repellendus sequi consequatur
                        incidunt praesentium.
  "/api/v1/projects/{id}":
    patch:
      summary: Updates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              example:
                data:
                  id: 062ad090-c228-40db-824c-c83d667f85e5
                  type: project
                  attributes:
                    title: Quis recusandae dolorum beatae veritatis provident iste.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
        '404':
          description: Project not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Suscipit nemo unde facere tenetur.
    delete:
      summary: Deletes Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Project deleted
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  "/api/v1/session":
    post:
      summary: Creates Session
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              example:
                data:
                  id: 13d1d2d2-9929-4beb-9fcc-76c074e47527
                  type: user_account
                  attributes:
                    username: giuseppe_johansson asahansen
                meta:
                  csrf: LbBh/MIaejURyVSjBCjJpXLAYwNqH39zjLhJbYIGrC4NWV4dWvrO/54QFDBYwOzSzXbX/V36KdsRrtovXkblJw==
                  access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUzMDc0MTksInVzZXJfaWQiOiIxM2QxZDJkMi05OTI5LTRiZWItOWZjYy03NmMwNzRlNDc1MjciLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi0xM2QxZDJkMi05OTI5LTRiZWItOWZjYy03NmMwNzRlNDc1MjciLCJ1aWQiOiIxMzQwM2NjNC00MWQ2LTQ0NTktYjczNC05NTg4ODJiNTQwMDcifQ.4_U1hKKChcpZ69UN9awDx_vPgfy4PwL4wy3AYcHMrY8
                  access_expires_at: '2022-02-19T23:50:19.000+02:00'
                  refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUzNDcwMTksInVzZXJfaWQiOiIxM2QxZDJkMi05OTI5LTRiZWItOWZjYy03NmMwNzRlNDc1MjciLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi0xM2QxZDJkMi05OTI5LTRiZWItOWZjYy03NmMwNzRlNDc1MjciLCJ1aWQiOiJkZmM2OGQ2Zi1iYjU5LTRjZjktYThjNS1iNjI4OWFmZDk0ODgifQ.V34TIBQWkQnrUyXm3cWSz6mBwvWOzm7mxYfFq89l0VE
                  refresh_expires_at: '2022-02-20T10:50:19.000+02:00'
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                  base:
                  - Invalid username or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: katia
                password:
                  type: string
                  example: Wtf6WGI6
    delete:
      summary: Destroys Session
      tags:
      - Sessions
      parameters:
      - name: X-Refresh-Token
        in: header
        description: Refresh Token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '403':
          description: Not authorized
  "/api/v1/projects/{project_id}/tasks":
    post:
      summary: Creates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: project_id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              example:
                data:
                  id: ba0d919b-4ede-4706-a09f-e584921b5619
                  type: task
                  attributes:
                    description: Vel eius quibusdam dignissimos ut ea inventore eaque
                      maxime.
                    position: 1
                    is_done: false
                    deadline: '2022-02-19T20:50:19.198Z'
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  description:
                  - Description is required.
                  deadline:
                  - Deadline is required
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  - deadline
                  properties:
                    description:
                      type: string
                      example: Laborum id minima accusamus nam consequatur sunt.
                    deadline:
                      type: string
                      example: '2022-02-19T22:50:18+02:00'
  "/api/v1/tasks/{id}":
    put:
      summary: Updates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Task is updated
          content:
            application/json:
              example:
                data:
                  id: a7a0bf70-c433-41b3-8724-b636419c6ccf
                  type: task
                  attributes:
                    description: Aliquid inventore eaque porro magni deleniti numquam.
                    position: 1
                    is_done: false
                    deadline: '2022-02-19T20:50:19.299Z'
        '401':
          description: Unauthorized
        '404':
          description: Task not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  deadline:
                  - Deadline should have DateTime format
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  - deadline
                  - position
                  - is_done
                  properties:
                    description:
                      type: string
                      example: Consequatur explicabo iusto possimus aspernatur.
                    deadline:
                      type: string
                      example: '2022-02-19T22:50:18+02:00'
                    position:
                      type: integer
                      example: 7
                    is_done:
                      type: boolean
                      example: true
    delete:
      summary: Deletes Task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Task deleted
        '401':
          description: Unauthorized
        '404':
          description: Task not found
  "/api/v1/user":
    post:
      summary: Creates User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User is created
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
                  password_confirmation:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: wilburnpettersson
                    password:
                      type: string
                      example: Abc43Dea
                    password_confirmation:
                      type: string
                      example: Abc43Dea
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
