---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/tasks/{task_id}/comments":
    post:
      summary: Creates comment
      tags:
      - Comments
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: task_id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Comment is created
          content:
            application/json:
              example:
                data:
                  id: 94c1023f-1e07-4725-92b9-d4553399a996
                  type: comment
                  attributes:
                    text: Quasi illum facilis perspiciatis ea voluptatibus necessitatibus
                      nostrum.
                    image_url: 
        '401':
          description: Unauthorized
        '404':
          description: Task not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  text:
                  - Text is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - comment
              properties:
                comment:
                  type: object
                  required:
                  - text
                  properties:
                    description:
                      type: string
                      example: Vero ipsam ratione labore nihil.
  "/api/v1/comments/{id}":
    delete:
      summary: Deletes comment
      tags:
      - Comments
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Comment id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Comment deleted
        '401':
          description: Unauthorized
        '404':
          description: Comment not found
  "/api/v1/projects":
    post:
      summary: Creates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              example:
                data:
                  id: 357ea3f0-f573-4d11-9de8-163ab7be69c3
                  type: project
                  attributes:
                    title: Occaecati possimus exercitationem maxime aliquam quis id
                      fugiat.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Quis repudiandae nam provident odit fugiat itaque impedit.
  "/api/v1/projects/{id}":
    patch:
      summary: Updates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              example:
                data:
                  id: 03de3137-fd55-4d83-82da-89255affc280
                  type: project
                  attributes:
                    title: Quis molestiae expedita nulla cupiditate.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
        '404':
          description: Project not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Libero aperiam perferendis laudantium amet dolorum
                        eum sint.
    delete:
      summary: Deletes Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Project deleted
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  "/api/v1/session":
    post:
      summary: Creates Session
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              example:
                data:
                  id: 57401b82-6159-484f-82e4-8a30e6517674
                  type: user_account
                  attributes:
                    username: fe chia
                meta:
                  csrf: L2ITvh0obADs9aTdwdCMDK/sDlAXrSEYbx5fOquAgBxwQ93j2nt7Dq/2LQdtvBD2c3HU8xH14BRxg3Fyd14tLw==
                  access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUzMDkwNzcsInVzZXJfaWQiOiI1NzQwMWI4Mi02MTU5LTQ4NGYtODJlNC04YTMwZTY1MTc2NzQiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi01NzQwMWI4Mi02MTU5LTQ4NGYtODJlNC04YTMwZTY1MTc2NzQiLCJ1aWQiOiI5OTNkMGI2NS04NTc3LTQyN2MtYWQyNS1iMTgzMDI4OThmYjkifQ.EuX64sT-EA_PDPaEdAt3NxMItj0qgZmFFDcP2sDji24
                  access_expires_at: '2022-02-20T00:17:57.000+02:00'
                  refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUzNDg2NzcsInVzZXJfaWQiOiI1NzQwMWI4Mi02MTU5LTQ4NGYtODJlNC04YTMwZTY1MTc2NzQiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi01NzQwMWI4Mi02MTU5LTQ4NGYtODJlNC04YTMwZTY1MTc2NzQiLCJ1aWQiOiJmNTJmNTc4NC01NWI0LTRjNDYtYTk3NS00NDc2MGZjOGIzOWQifQ.DwTbpVXu92mOB4C4IjmlMGcwUM7xdbTTEotpgBYbEf4
                  refresh_expires_at: '2022-02-20T11:17:57.000+02:00'
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                  base:
                  - Invalid username or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: berry_plsson
                password:
                  type: string
                  example: rHlnM41k
    delete:
      summary: Destroys Session
      tags:
      - Sessions
      parameters:
      - name: X-Refresh-Token
        in: header
        description: Refresh Token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '403':
          description: Not authorized
  "/api/v1/projects/{project_id}/tasks":
    post:
      summary: Creates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: project_id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              example:
                data:
                  id: 97fa4622-1cc9-44d1-b6d8-80285b5f196d
                  type: task
                  attributes:
                    description: Possimus ut ipsa ratione facilis numquam.
                    position: 1
                    is_done: false
                    deadline: '2022-02-19T21:17:57.406Z'
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  description:
                  - Description is required.
                  deadline:
                  - Deadline is required
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  - deadline
                  properties:
                    description:
                      type: string
                      example: Cupiditate minima reprehenderit corrupti explicabo
                        quisquam adipisci.
                    deadline:
                      type: string
                      example: '2022-02-19T23:17:56+02:00'
  "/api/v1/tasks/{id}":
    put:
      summary: Updates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Task is updated
          content:
            application/json:
              example:
                data:
                  id: 2c6e25ce-a723-480b-9b9a-b913d5e62730
                  type: task
                  attributes:
                    description: Corporis voluptatum adipisci aliquid at quibusdam
                      facilis excepturi.
                    position: 1
                    is_done: false
                    deadline: '2022-02-19T21:17:57.518Z'
        '401':
          description: Unauthorized
        '404':
          description: Task not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  deadline:
                  - Deadline should have DateTime format
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  - deadline
                  - position
                  - is_done
                  properties:
                    description:
                      type: string
                      example: Iure sequi optio eveniet exercitationem eos numquam
                        dolore.
                    deadline:
                      type: string
                      example: '2022-02-19T23:17:56+02:00'
                    position:
                      type: integer
                      example: 9
                    is_done:
                      type: boolean
                      example: true
    delete:
      summary: Deletes Task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Task deleted
        '401':
          description: Unauthorized
        '404':
          description: Task not found
  "/api/v1/user":
    post:
      summary: Creates User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User is created
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
                  password_confirmation:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: kortney
                    password:
                      type: string
                      example: Abc43Dea
                    password_confirmation:
                      type: string
                      example: Abc43Dea
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
