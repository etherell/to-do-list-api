---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/projects":
    post:
      summary: Creates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              example:
                data:
                  id: d52f01cd-0f7f-4ed0-9e8f-f4bdb2eea14f
                  type: project
                  attributes:
                    title: Fugiat vel sequi ipsum aliquid optio autem.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Doloremque aliquid eum impedit harum ullam pariatur
                        debitis.
  "/api/v1/projects/{id}":
    patch:
      summary: Updates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              example:
                data:
                  id: 81fbffe7-26f0-4e29-b39e-1c63a0686f19
                  type: project
                  attributes:
                    title: Incidunt modi minus unde optio corporis debitis.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
        '404':
          description: Project not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Nisi laborum quo commodi soluta cupiditate tenetur
                        nostrum.
    delete:
      summary: Deletes Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Project deleted
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  "/api/v1/session":
    post:
      summary: Creates Session
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              example:
                data:
                  id: 6c1c26b3-2450-40ff-a013-55b4ae4bc2f1
                  type: user_account
                  attributes:
                    username: echo katlyn
                meta:
                  csrf: EafXX+h5awe8uC7l/NGgk/fDY2rXHN5HjOfPn1qOrNDmJS5R5AR6P/Zws9VTtlxIgk0DhyD9cMTDrtM6QNmrog==
                  access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUyNjA0MzIsInVzZXJfaWQiOiI2YzFjMjZiMy0yNDUwLTQwZmYtYTAxMy01NWI0YWU0YmMyZjEiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi02YzFjMjZiMy0yNDUwLTQwZmYtYTAxMy01NWI0YWU0YmMyZjEiLCJ1aWQiOiI2MmViYmMzMi02NzY2LTQ1NTgtODQ2YS05ZjExMzI4ZjMwYTkifQ.DmD9Wgmc08datGy_oxRERUWCCRMs6KF7zZcrqegjIH4
                  access_expires_at: '2022-02-19T10:47:12.000+02:00'
                  refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUzMDAwMzIsInVzZXJfaWQiOiI2YzFjMjZiMy0yNDUwLTQwZmYtYTAxMy01NWI0YWU0YmMyZjEiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi02YzFjMjZiMy0yNDUwLTQwZmYtYTAxMy01NWI0YWU0YmMyZjEiLCJ1aWQiOiI3NmU0NzA3OS0xODU4LTRkZmUtYjUyMi1mZTM1MTA4NTUxNzIifQ.DbmWBQbGLFjt86NcrzqCyWly9D_297a3aQ3fjv53Gsw
                  refresh_expires_at: '2022-02-19T21:47:12.000+02:00'
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                  base:
                  - Invalid username or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: tiannareynalda
                password:
                  type: string
                  example: SL5PZyy0
    delete:
      summary: Destroys Session
      tags:
      - Sessions
      parameters:
      - name: X-Refresh-Token
        in: header
        description: Refresh Token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '403':
          description: Not authorized
  "/api/v1/projects/{project_id}/tasks":
    post:
      summary: Creates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: project_id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              example:
                data:
                  id: 2d749a8b-ed54-4466-85b2-17b108c43892
                  type: task
                  attributes:
                    description: Quo quos error atque architecto porro.
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  description:
                  - Description is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  properties:
                    description:
                      type: string
                      example: Eaque provident minus quibusdam iste velit itaque.
  "/api/v1/user":
    post:
      summary: Creates User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User is created
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
                  password_confirmation:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: johnsonholmgren
                    password:
                      type: string
                      example: Abc43Dea
                    password_confirmation:
                      type: string
                      example: Abc43Dea
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
