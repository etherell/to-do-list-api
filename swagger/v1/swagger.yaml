---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/projects":
    post:
      summary: Creates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              example:
                data:
                  id: 4bb4a39b-5d16-42f7-ba87-7d33b9eb7888
                  type: project
                  attributes:
                    title: Quaerat dignissimos nemo autem nulla deleniti dolor id.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Inventore molestias vel soluta iure expedita consectetur
                        eaque quisquam.
  "/api/v1/projects/{id}":
    patch:
      summary: Updates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              example:
                data:
                  id: 17cc9417-254a-4ff6-8e03-b168a6f2837e
                  type: project
                  attributes:
                    title: Nisi odio voluptatibus porro laborum asperiores.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
        '404':
          description: Project not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Inventore mollitia eveniet accusamus optio dolor similique.
    delete:
      summary: Deletes Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Project deleted
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  "/api/v1/session":
    post:
      summary: Creates Session
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              example:
                data:
                  id: 5aa2e7e0-220b-4fab-88b9-0c2420a4d698
                  type: user_account
                  attributes:
                    username: bernienestor_holmberg elmerholmberg
                meta:
                  csrf: ngko5cdL5tQGz3DwavezC5c+Vg5sxkWuyofA2FX/WIftFgW+hPdTdLjxH13guF9Sq6RdbYWvDB7IfAnJjuiiPQ==
                  access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUyNjg2NjAsInVzZXJfaWQiOiI1YWEyZTdlMC0yMjBiLTRmYWItODhiOS0wYzI0MjBhNGQ2OTgiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi01YWEyZTdlMC0yMjBiLTRmYWItODhiOS0wYzI0MjBhNGQ2OTgiLCJ1aWQiOiJlZTgzZjkxZC1lMjU5LTQ1ZDEtYWI5NC04N2U0M2FiYzgxZWUifQ.y9ByBh06tPaX3yidB4tBZfZIQXEqtGMnQH2NaBvjdOY
                  access_expires_at: '2022-02-19T13:04:20.000+02:00'
                  refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUzMDgyNjAsInVzZXJfaWQiOiI1YWEyZTdlMC0yMjBiLTRmYWItODhiOS0wYzI0MjBhNGQ2OTgiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi01YWEyZTdlMC0yMjBiLTRmYWItODhiOS0wYzI0MjBhNGQ2OTgiLCJ1aWQiOiI1ODc4MzUyMy1mMTdkLTRiYjgtYTJmMy01MWRiNzhkYmUwMjIifQ.wxcIZVoWAC74TergnkR4NwzafXdiD4mzAz-CsTcHmpo
                  refresh_expires_at: '2022-02-20T00:04:20.000+02:00'
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                  base:
                  - Invalid username or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: mario
                password:
                  type: string
                  example: nvaUEzZR
    delete:
      summary: Destroys Session
      tags:
      - Sessions
      parameters:
      - name: X-Refresh-Token
        in: header
        description: Refresh Token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '403':
          description: Not authorized
  "/api/v1/projects/{project_id}/tasks":
    post:
      summary: Creates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: project_id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              example:
                data:
                  id: 734358a8-e9c0-45fd-9568-12db8a497d3a
                  type: task
                  attributes:
                    description: Tempore maiores fugit eligendi sequi nam incidunt
                      mollitia.
                    position: 1
                    is_done: false
                    deadline: '2022-02-19T10:04:21.005Z'
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  description:
                  - Description is required.
                  deadline:
                  - Deadline is required
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  - deadline
                  properties:
                    description:
                      type: string
                      example: Ipsa doloribus libero dolore quidem nisi cupiditate.
                    deadline:
                      type: string
                      example: '2022-02-19T12:04:20+02:00'
  "/api/v1/user":
    post:
      summary: Creates User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User is created
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
                  password_confirmation:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: jenell_berg
                    password:
                      type: string
                      example: Abc43Dea
                    password_confirmation:
                      type: string
                      example: Abc43Dea
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
