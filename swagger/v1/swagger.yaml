---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/projects":
    post:
      summary: Creates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: Project is created
          content:
            application/json:
              example:
                data:
                  id: 511a229a-11a9-426a-82d0-bbdcdfa62eb9
                  type: project
                  attributes:
                    title: Fugiat corrupti consequuntur maiores accusamus.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Quasi pariatur omnis quam possimus veritatis odit occaecati.
  "/api/v1/projects/{id}":
    patch:
      summary: Updates Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Project updated
          content:
            application/json:
              example:
                data:
                  id: 7fae3e42-da1c-411e-9da0-61271b4c9665
                  type: project
                  attributes:
                    title: Cum blanditiis hic temporibus culpa perspiciatis.
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  title:
                  - Title is required.
        '404':
          description: Project not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - project
              properties:
                project:
                  type: object
                  required:
                  - title
                  properties:
                    title:
                      type: string
                      example: Sint rem occaecati soluta placeat necessitatibus optio
                        sequi libero.
    delete:
      summary: Deletes Project
      tags:
      - Projects
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Project deleted
        '401':
          description: Unauthorized
        '404':
          description: Project not found
  "/api/v1/session":
    post:
      summary: Creates Session
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: Session is created
          content:
            application/json:
              example:
                data:
                  id: 751ec924-933d-48bc-87bc-bc1a316784af
                  type: user_account
                  attributes:
                    username: mattheweriksson clarence_lind
                meta:
                  csrf: tULQe/EtZdvm7vHcwAoAIdz8d2jqH8hRqor8/5TRXOnT5OHU3boq8XCqV5l/Ybq0/b31UiMFa+oAanEy0OpYzw==
                  access: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUyNzI5MTksInVzZXJfaWQiOiI3NTFlYzkyNC05MzNkLTQ4YmMtODdiYy1iYzFhMzE2Nzg0YWYiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi03NTFlYzkyNC05MzNkLTQ4YmMtODdiYy1iYzFhMzE2Nzg0YWYiLCJ1aWQiOiIwMDFmMDBiZC1lNGRiLTQ1YmMtYjA2OC0yMzFkMDMwY2Q2YjEifQ.a6nNSYzumDvU2uN9lBiUZcm7mzNaZAIrqgaYFniS7o4
                  access_expires_at: '2022-02-19T14:15:19.000+02:00'
                  refresh: eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDUzMTI1MTksInVzZXJfaWQiOiI3NTFlYzkyNC05MzNkLTQ4YmMtODdiYy1iYzFhMzE2Nzg0YWYiLCJuYW1lc3BhY2UiOiJ1c2VyLWFjY291bnQtc2Vzc2lvbi03NTFlYzkyNC05MzNkLTQ4YmMtODdiYy1iYzFhMzE2Nzg0YWYiLCJ1aWQiOiJhYTM1N2UxYy05YzRkLTRkNWMtOTA5ZC0zZTgxNjYzMTlmNzgifQ.476bC8m3aObY_c79-2aszSWOYc188dyFv-uQShBkWFo
                  refresh_expires_at: '2022-02-20T01:15:19.000+02:00'
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
        '401':
          description: Invalid credentials
          content:
            application/json:
              example:
                errors:
                  base:
                  - Invalid username or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - username
              - password
              properties:
                username:
                  type: string
                  example: albertina
                password:
                  type: string
                  example: yAtSLKDq
    delete:
      summary: Destroys Session
      tags:
      - Sessions
      parameters:
      - name: X-Refresh-Token
        in: header
        description: Refresh Token
        schema:
          type: string
      responses:
        '204':
          description: Session is destroyed
        '403':
          description: Not authorized
  "/api/v1/projects/{project_id}/tasks":
    post:
      summary: Creates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: project_id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: Task is created
          content:
            application/json:
              example:
                data:
                  id: 34a0c28f-887d-44aa-ba07-960db54fbbcf
                  type: task
                  attributes:
                    description: Consectetur veniam aut laborum blanditiis voluptas
                      voluptate.
                    position: 1
                    is_done: false
                    deadline: '2022-02-19T11:15:19.912Z'
        '401':
          description: Unauthorized
        '404':
          description: Project not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  description:
                  - Description is required.
                  deadline:
                  - Deadline is required
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  - deadline
                  properties:
                    description:
                      type: string
                      example: Fuga asperiores perspiciatis quo illo.
                    deadline:
                      type: string
                      example: '2022-02-19T13:15:19+02:00'
  "/api/v1/projects/{project_id}/tasks/{id}":
    put:
      summary: Updates task
      tags:
      - Tasks
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: project_id
        in: path
        description: Project id
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: Task id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Task is updated
          content:
            application/json:
              example:
                data:
                  id: 3ffe267c-b8a6-441d-b30e-87a0bec321b2
                  type: task
                  attributes:
                    description: Similique dolorem esse nam quod quas voluptate.
                    position: 1
                    is_done: false
                    deadline: '2022-02-19T11:15:20.025Z'
        '401':
          description: Unauthorized
        '404':
          description: Task not found
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  deadline:
                  - Deadline should have DateTime format
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - task
              properties:
                task:
                  type: object
                  required:
                  - description
                  - deadline
                  - position
                  - is_done
                  properties:
                    description:
                      type: string
                      example: Esse asperiores beatae a illum.
                    deadline:
                      type: string
                      example: '2022-02-19T13:15:19+02:00'
                    position:
                      type: integer
                      example: 3
                    is_done:
                      type: boolean
                      example: true
  "/api/v1/user":
    post:
      summary: Creates User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: User is created
        '422':
          description: Invalid params
          content:
            application/json:
              example:
                errors:
                  username:
                  - The field is required.
                  password:
                  - The field is required.
                  password_confirmation:
                  - The field is required.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - user
              properties:
                user:
                  type: object
                  required:
                  - username
                  - password
                  - password_confirmation
                  properties:
                    username:
                      type: string
                      example: porshakarol
                    password:
                      type: string
                      example: Abc43Dea
                    password_confirmation:
                      type: string
                      example: Abc43Dea
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    Bearer:
      description: JWT key necessary to use API calls
      type: apiKey
      name: Authorization
      in: header
